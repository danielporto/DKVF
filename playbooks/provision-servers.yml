- hosts: servers
  become: no
  any_errors_fatal: true
  gather_facts: no 
  vars_files:
      - vars.yml
      - topology.yml

  tasks:

    - name: Create remote server configuration folder
      file: 
        path: "{{ item }}"
        state: directory
        mode: "g+rw"
      with_items:
        - "{{ default_install_dir }}/{{ protocol }}/{{inventory_hostname}}"      


    - name: build source code for "{{ protocol  }}"
      delegate_to: 127.0.0.1
      run_once: yes
      ansible.builtin.shell: |
        gradle clean build
      args:
        executable: /bin/bash
        chdir: "../{{ protocol }}_server"

    - name: Check resulting jar
      delegate_to: 127.0.0.1
      run_once: yes
      stat:
        path: "../{{ protocol }}_server/build/libs/{{ protocol }}_server-all-0.0.1-SNAPSHOT.jar"
      register: stat_result

    - name: Make sure that the jar exist locally
      delegate_to: 127.0.0.1
      run_once: yes
      assert:
        that:
          - stat_result.stat.exists

    - name: Upload server jar to remote nodes
      copy:
        src: "../{{ protocol }}_server/build/libs/{{ protocol }}_server-all-0.0.1-SNAPSHOT.jar"
        dest: "{{ default_install_dir }}/{{ protocol }}/{{inventory_hostname}}"

    - name: Deploy cluster configuration
      template:
        src: templates/server.conf.tmpl
        dest: "{{ default_install_dir }}/{{ protocol }}/{{inventory_hostname}}/server{{ topology['servers'][inventory_hostname].id }}.conf"
        mode: "u=r,g=r,o=r"

    - name: Deploy server run script
      template:
        src: templates/runServer.sh.tmpl
        dest: "{{ default_install_dir }}/{{ protocol }}/{{inventory_hostname}}/runServer{{ topology['servers'][inventory_hostname].id }}.sh"
        mode: "u=rx,g=rx,o=rx"
